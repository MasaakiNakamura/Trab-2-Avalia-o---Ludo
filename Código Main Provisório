package Jogo;

import java.util.Random;
import java.util.Scanner;
import javax.swing.JOptionPane;

public class Prova {
	public static void main (String[] args){
		Scanner scanner = new Scanner (System.in);
		Random random = new Random();
		int i = 0;
		int j = 0;
		int contadorDePecasRetiradas1 = 0;
		int contadorDePecasRetiradas2 = 0;
		int contadorDePecasRetiradas3 = 0;
		int contadorDePecasRetiradas4 = 0;
		int contadorDeMovimentosInicial1 = 0;
		int contadorDeMovimentosInicial2 = 0;
		int contadorDeMovimentosInicial3 = 0;
		int contadorDeMovimentosInicial4 = 0;
		int contadorDeMovimentos1 = 0;
		int contadorDeMovimentos2 = 0;
		int contadorDeMovimentos3 = 0;
		int contadorDeMovimentos4 = 0;
		int valorDoDado = 0; // valor do dado
		int tresJogadasMinimas = 0;
		
		String tabuleiro[][] = {
				{"X", "X", "X", "X", "X", "X", "-", "-", "-", "X", "X", "X", "X", "X", "X"},
				{"X", "-", "-", "-", "-", "X", "-", "%", "%", "X", "-", "-", "-", "-", "X"},
				{"X", "-", "1", "1", "-", "X", "-", "%", "-", "X", "-", "2", "2", "-", "X"},
				{"X", "-", "1", "1", "-", "X", "-", "%", "-", "X", "-", "2", "2", "-", "X"},
				{"X", "-", "-", "-", "-", "X", "-", "%", "-", "X", "-", "-", "-", "-", "X"},
				{"X", "X", "X", "X", "X", "X", "-", "%", "-", "X", "X", "X", "X", "X", "X"},
				{"-", "+", "-", "-", "-", "-", "-", "%", "-", "-", "-", "-", "-", "-", "-"},
				{"-", "+", "+", "+", "+", "+", "+", "X", "*", "*", "*", "*", "*", "*", "-"},
				{"-", "-", "-", "-", "-", "-", "-", "&", "-", "-", "-", "-", "-", "*", "-"},
				{"X", "X", "X", "X", "X", "X", "-", "&", "-", "X", "X", "X", "X", "X", "X"},
				{"X", "-", "-", "-", "-", "X", "-", "&", "-", "X", "-", "-", "-", "-", "X"},
				{"X", "-", "4", "4", "-", "X", "-", "&", "-", "X", "-", "3", "3", "-", "X"},
				{"X", "-", "4", "4", "-", "X", "-", "&", "-", "X", "-", "3", "3", "-", "X"},
				{"X", "-", "-", "-", "-", "X", "&", "&", "-", "X", "-", "-", "-", "-", "X"},
				{"X", "X", "X", "X", "X", "X", "-", "-", "-", "X", "X", "X", "X", "X", "X"}
		};
		
		int movimentacaoExterna1[][] = {
				{6, 6, 6 ,6 ,6 ,6, 5, 4 ,3 ,2 ,1, 0, 0, 0, 1, 2, 3, 4, 5 ,6, 6, 6, 6, 6, 6, 6, 7, 8, 8, 8, 8, 8, 8,
				8, 9, 10, 11, 12, 13, 14, 14, 14, 13, 12, 11, 10, 9, 8, 8, 8, 8, 8, 8, 8 ,7, 6, 6, 7, 7, 7, 7, 7, 7},
				{1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 6, 6, 7, 8, 8, 8, 8, 8, 8, 8, 9, 10, 11, 12, 13, 14, 14, 14, 13, 12,
				11, 10, 9, 8, 8, 8, 8, 8, 8, 8, 7, 6, 6, 6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 1, 2, 3, 4, 5, 6 }
		};
			
		int movimentacaoExterna2[][] = {
				{1, 2, 3, 4, 5 ,6, 6, 6, 6, 6, 6, 6, 7, 8, 8, 8, 8, 8, 8, 8, 9, 10, 11,	12, 13, 14, 14, 14, 13, 12,
				11, 10,	9, 8, 8, 8, 8, 8, 8, 8, 7, 6, 6, 6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 1, 2, 3, 4, 5, 6}, 
				{8, 8, 8, 8, 8, 8, 8, 9, 10, 11, 12, 13, 14, 14, 14, 13, 12, 11, 10, 9, 8, 8, 8, 8, 8, 8, 8, 7, 6,
				6, 6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 6, 6, 7, 8, 8, 7, 7, 7, 7, 7, 7}
		};
		
		int movimentacaoExterna3[][] = {
				{8, 8, 8, 8, 8, 8, 8, 9, 10, 11, 12, 13, 14, 14, 14, 13, 12, 11, 10, 9, 8, 8, 8, 8, 8, 8, 8, 7, 6, 6,
				6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 6, 6, 7, 8, 8, 7, 7, 7, 7, 7, 7},
				{13, 12, 11, 10, 9, 8, 8, 8, 8, 8, 8, 8, 7, 6, 6, 6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4,
				5, 6, 6, 6, 6, 6, 6, 6, 7, 8, 8, 8, 8, 8, 8, 8, 9, 10, 11, 12, 13, 14, 14, 14, 13, 13, 12, 11, 10, 9, 8}
		};
		
		int movimentacaoExterna4[][] = {
				{13, 12, 11, 10, 9, 8, 8, 8, 8, 8, 8, 8, 7, 6, 6, 6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4,
				5, 6, 6, 6, 6, 6, 6, 6, 7, 8, 8, 8, 8, 8, 8, 8, 9, 10, 11, 12, 13, 14, 14, 14, 13, 13, 12, 11, 10, 9, 8},
				{6, 6, 6, 6, 6, 6, 5, 4, 3, 2, 1, 0, 0, 0, 1, 2, 3, 4, 5, 6, 6, 6, 6, 6, 6, 6, 7, 8, 8, 8, 8, 8, 8,
				8, 9, 10, 11, 12, 13, 14, 14, 14, 13, 12, 11, 10, 9, 8, 8, 8, 8, 8, 8, 8, 7, 6, 6, 7, 7, 7, 7, 7, 7}
		};
		//	os números contidos no primeiro par de chaves representam as linhas da matriz e os contidos no segundo par 
		//	representam as colunas. Cada número se relaciona com o seu valor correspodente no outro par. ou seja,
		// A coluna 1 da linha 0 se relaciona com a coluna 1 da linha 1 e assim sucessivamente. Os números estão em
		// sequência da ordem dos movimentos do tabuleiro.
		
		// -1 porque quando o as posições são contadas a partir da posição 0, e se sair o valor 1, o contador vai receber
		// o valor 1 e retornando o valor da segunda coluna, e não da primeira. o "-1" é para "compensar" oa acréścimo de 
		// uma unidade
		


			
		JOptionPane.showMessageDialog(null, "Jogador 1");
		JOptionPane.showMessageDialog(null, "Jogar Dado");
		valorDoDado = random.nextInt(6) + 1;
		JOptionPane.showMessageDialog(null, valorDoDado);
		
		//verficação do valor do dado para saber se o jogador vai sair do "cemitério" ou não
		if((valorDoDado == 1) || (valorDoDado == 6)){
			JOptionPane.showMessageDialog(null, "Jogador 1 entrou no jogo");
			tabuleiro[6][0] = "1";
			tabuleiro[3][3] = "+";
			contadorDePecasRetiradas1++;
			System.out.println("");
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
			
		} else {
			JOptionPane.showMessageDialog(null, "Número diferente de 1 ou 6");
			JOptionPane.showMessageDialog(null, "Próximo Jogador");
		}
		
		JOptionPane.showMessageDialog(null, "Jogador 2");
		JOptionPane.showMessageDialog(null, "Jogar Dado");
		valorDoDado = random.nextInt(6) + 1;
		JOptionPane.showMessageDialog(null, valorDoDado);
		
		if((valorDoDado == 1) || (valorDoDado == 6)){
			JOptionPane.showMessageDialog(null, "Jogador 2 entrou no jogo");
			tabuleiro[0][8] = "2";
			tabuleiro[3][12] = "+";
			contadorDePecasRetiradas2++;
			System.out.println("");
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
			
		} else {
			JOptionPane.showMessageDialog(null, "Número diferente de 1 ou 6");
			JOptionPane.showMessageDialog(null, "Próximo Jogador");
		}
		
		JOptionPane.showMessageDialog(null, "Jogador 3:");
		JOptionPane.showMessageDialog(null, "Jogar Dado");
		valorDoDado = random.nextInt(6) + 1;
		JOptionPane.showMessageDialog(null, valorDoDado);
		
		if((valorDoDado == 1) || (valorDoDado == 6)){
			JOptionPane.showMessageDialog(null, "Jogador 3 entrou no jogo");
			tabuleiro[8][13] = "3";
			tabuleiro[12][12] = "+";
			contadorDePecasRetiradas3++;
			System.out.println("");
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
			
		} else {
			JOptionPane.showMessageDialog(null, "Número diferente de 1 ou 6");
			JOptionPane.showMessageDialog(null, "Próximo Jogador");
		}
		
		JOptionPane.showMessageDialog(null, "Jogador 4");
		JOptionPane.showMessageDialog(null, "Jogar Dado");
		valorDoDado = random.nextInt(6) + 1;
		JOptionPane.showMessageDialog(null, valorDoDado);
		
		if((valorDoDado == 1) || (valorDoDado == 6)){
			JOptionPane.showMessageDialog(null, "Jogador 4 entrou no jogo");
			tabuleiro[13][6] = "4";
			tabuleiro[12][3] = "+";
			contadorDePecasRetiradas4++;
			System.out.println("");
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
			
		} else {
			JOptionPane.showMessageDialog(null, "Número diferente de 1 ou 6");
			JOptionPane.showMessageDialog(null, "Próximo Jogador");
		}
		
		
		
		
		
		
		//while(true){
		
		JOptionPane.showMessageDialog(null, "Jogador 1");
		JOptionPane.showMessageDialog(null, "Jogar Dado");
		valorDoDado = random.nextInt(6) + 1;
		JOptionPane.showMessageDialog(null, valorDoDado);
		
		if(contadorDePecasRetiradas1 != 0){ // é iniciada com valor false
			if(valorDoDado == 1){ //verifica se o valor do dado é igual a 1
				if(JOptionPane.showConfirmDialog(null, "Deseja retirar uma peça do cemitério?", "", 0, 1) == 0){
					//seleciona retirar uma peça do cemitério ou não 
					if(contadorDePecasRetiradas1 == 1){
						//comparação para saber quantas peças já foram retiradas do cemitério para substituir "+" no
						//lugar da peça retirada e colocar "2" na posição inicial do tabuleiro e assim sucessivamente
						tabuleiro[3][2] = "+";
						tabuleiro[6][0] = "1";
						
					} else if(contadorDePecasRetiradas1 == 2){
						tabuleiro[2][3] = "+";
						tabuleiro[6][0] = "1";
						
					} else if(contadorDePecasRetiradas1 == 3){
						tabuleiro[2][2] = "+";
						tabuleiro[6][0] = "1";
					}
				}
			} else if (valorDoDado == 6){//comparação para saber se o valor do dado é igual a 6
				contadorDeMovimentosInicial1 = contadorDeMovimentos1; //atribui o valor antigo do dado para essa variável
				contadorDeMovimentos1 += valorDoDado; // o valor do contador vai ser acrescido pelo valor do dado, indicando
													  //o avanço na posição do tabuleiro (na matriz vetor de moviemntos)
				tabuleiro[movimentacaoExterna1[0][contadorDeMovimentosInicial1]][movimentacaoExterna1[1][contadorDeMovimentosInicial1]] = "-";
				//Substitui a posição atual por "-" (reestabecendo a formação normal do tabuleiro que é completa por "-" onde há a movimentação das peças)
				tabuleiro[movimentacaoExterna1[0][contadorDeMovimentos1]][movimentacaoExterna1[1][contadorDeMovimentos1]] = "1";
				//substitui a posição final por "1", atualizando a poisção nova da peça
				//o mesmo ocorre com as outras peças
				valorDoDado = random.nextInt(6) + 1; // gera um novo valor pro dado pois. como o valor 6 foi retirado, o jogador pode jogar novamente
				System.out.println("");
				
				for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
					for(j = 0; j < 15; j++){
						System.out.print(tabuleiro[i][j] + " ");
					}
					System.out.println("");
				}
				
				System.out.println("");
				
				JOptionPane.showMessageDialog(null, "Jogando Dado novamente");
				JOptionPane.showMessageDialog(null, valorDoDado);
				contadorDeMovimentosInicial1 = contadorDeMovimentos1;
				contadorDeMovimentos1 += valorDoDado; // o valor do contador vai ser acrescido pelo valor do dado, indicando o avanço na posição do tabuleiro
				tabuleiro[movimentacaoExterna1[0][contadorDeMovimentosInicial1]][movimentacaoExterna1[1][contadorDeMovimentosInicial1]] = "-";
				//mesma acontecimento acima
				tabuleiro[movimentacaoExterna1[0][contadorDeMovimentos1]][movimentacaoExterna1[1][contadorDeMovimentos1]] = "1";//mesmo acontecimento acime
			}
			
			contadorDeMovimentosInicial1 = contadorDeMovimentos1;//mesmo acontecimento acima
			contadorDeMovimentos1 += valorDoDado; // o valor do contador vai ser acrescido pelo valor do dado, indicando o avanço na posição do tabuleiro
			tabuleiro[movimentacaoExterna1[0][contadorDeMovimentosInicial1]][movimentacaoExterna1[1][contadorDeMovimentosInicial1]] = "-";
			//mesmo acontecimento acima
			tabuleiro[movimentacaoExterna1[0][contadorDeMovimentos1]][movimentacaoExterna1[1][contadorDeMovimentos1]] = "1";//mesmo acontecimento acima
			
			//	tabuleiro2[X][Y]
			// 	X == LINHA 0 E COLUNA *CONTADOR DE MOVIMENTOS 1* DA MATRIZ DE MOVIMENTAÇÃO
			// Y == LINHA 1 E COLUNA *CONTADOR DE MOVIMENTOS 1* DA MATRIZ DE MOVIMENTAÇÃODA MATRIZ DE MOVIMENTAÇÃO
				
			System.out.println("");
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
			
			System.out.println("");
			
		} else if((valorDoDado == 1) || (valorDoDado == 6)){ // verificação para valor 1 ou 6 do dado para retirar uma peça do cemitério
			//só ocorrerá se NENHUMA peça tiver sido retirada do cemitério
				tabuleiro[6][0] = "1";
				tabuleiro[3][3] = "+";
				System.out.println("");
				
				for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
					for(j = 0; j < 15; j++){
						System.out.print(tabuleiro[i][j] + " ");
					}
					System.out.println("");
				}
				
		} else {
			JOptionPane.showMessageDialog(null, "Número diferente de 1 ou 6");
			JOptionPane.showMessageDialog(null, "Próximo Jogador");
		}

		//o mesmo se repete com as outras peças
		JOptionPane.showMessageDialog(null, "Jogador 2");
		JOptionPane.showMessageDialog(null, "Jogar Dado");
		valorDoDado = random.nextInt(6) + 1;
		JOptionPane.showMessageDialog(null, valorDoDado);
		
		if(contadorDePecasRetiradas2 != 0){
			if(valorDoDado == 1){
				if(JOptionPane.showConfirmDialog(null, "Deseja retirar uma peça do cemitério?", "", 0, 1) == 0){
					if(contadorDePecasRetiradas1 == 1){
						tabuleiro[3][11] = "+";
						tabuleiro[0][8] = "2";
						
					} else if(contadorDePecasRetiradas1 == 2){
						tabuleiro[2][12] = "+";
						tabuleiro[0][8] = "2";
						
					} else if(contadorDePecasRetiradas1 == 3){
						tabuleiro[2][11] = "+";
						tabuleiro[0][8] = "2";
					}
				}
			}
			
			contadorDeMovimentos2 += valorDoDado;
			tabuleiro[movimentacaoExterna2[0][contadorDeMovimentos2]][movimentacaoExterna2[1][contadorDeMovimentos2]] = "2";
			System.out.println("");
				
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
				
		} else if((valorDoDado == 1) || (valorDoDado == 6)){
			tabuleiro[0][8] = "2";
			System.out.println("");
			contadorDePecasRetiradas2++;
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
				System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
			
		} else {
			JOptionPane.showMessageDialog(null, "Número diferente de 1 ou 6");
			JOptionPane.showMessageDialog(null, "Próximo Jogador");
		}
		
		JOptionPane.showMessageDialog(null, "Jogador 3");
		JOptionPane.showMessageDialog(null, "Jogar Dado");
		valorDoDado = random.nextInt(6) + 1;
		JOptionPane.showMessageDialog(null, valorDoDado);
		
		if(contadorDePecasRetiradas3 != 0){
			contadorDeMovimentos3 += valorDoDado;
			tabuleiro[movimentacaoExterna3[0][contadorDeMovimentos3]][movimentacaoExterna3[1][contadorDeMovimentos3]] = "3";
			System.out.println("");
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
			
		} else if((valorDoDado == 1) || (valorDoDado == 6)){
			tabuleiro[8][13] = "3";
			System.out.println("");
			contadorDePecasRetiradas3++;
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
			
		} else{
			JOptionPane.showMessageDialog(null, "Número diferente de 1 ou 6");
			JOptionPane.showMessageDialog(null, "Próximo Jogador");
		}
		
		JOptionPane.showMessageDialog(null, "Jogador 4");
		JOptionPane.showMessageDialog(null, "Jogar Dado");
		valorDoDado = random.nextInt(6) + 1;
		JOptionPane.showMessageDialog(null, valorDoDado);
		
		if(contadorDePecasRetiradas4 != 0){
			contadorDeMovimentos4 += valorDoDado;
			tabuleiro[movimentacaoExterna4[0][contadorDeMovimentos4]][movimentacaoExterna4[1][contadorDeMovimentos4]] = "4";
			System.out.println("");
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}

		} else if((valorDoDado == 1) || (valorDoDado == 6)){
			tabuleiro[13][6] = "4";
			contadorDePecasRetiradas4++;
			System.out.println("");
			
			for(i = 0; i < 15; i++){ //serve para printar o tabuleiro		
				for(j = 0; j < 15; j++){
					System.out.print(tabuleiro[i][j] + " ");
				}
				System.out.println("");
			}
			
		} else {
				JOptionPane.showMessageDialog(null, "Número diferente de 1 ou 6");
				JOptionPane.showMessageDialog(null, "Próximo Jogador");
		}
		
		
		//} Para fechar as chaves while no inicio
		///*
		
	//verificação para a situação de que uma peça fica em cima do local de outra (sobreposta no tabuleiro)
		
	if(tabuleiro[movimentacaoExterna1[0][contadorDeMovimentos1]][movimentacaoExterna1[1][contadorDeMovimentos1]].equals("2")){ 
		//caso a peça 1 caia em cima da peça 2
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[2 + i][11 + j].equals("+")){
					tabuleiro[2 + i][11 + j] = "2";
					break;
				}
			}
		}
		
		tabuleiro[movimentacaoExterna1[0][contadorDeMovimentos1]][movimentacaoExterna1[1][contadorDeMovimentos1]] = "1";
		//será inserido o valor 1 na posição final da movimentação
		
	} else if(tabuleiro[movimentacaoExterna1[0][contadorDeMovimentos1]][movimentacaoExterna1[1][contadorDeMovimentos1]].equals("3")){
		//caso a peça 1 caia em cima da peça 3
		
		for(i = 0; i < 2; i++){ //verificação para saber se aonde "voltar" o 3. Pois as peças saem na ordem da direita para a equerda
								//e de baixo para cima. Por exemplo No caso, se houver duas peças "3" em jogo, a peça que foi 
								// sobreposta volta para a posição [12][11]
			for(j = 0; j < 2; j++){
				if(tabuleiro[11 + i][11 + j].equals("+")){
					tabuleiro[11 + i][11 + j] = "3";
					break;
				}
			}
		}
		
		tabuleiro[movimentacaoExterna1[0][contadorDeMovimentos1]][movimentacaoExterna1[1][contadorDeMovimentos1]] = "1";
		
	} else if(tabuleiro[movimentacaoExterna1[0][contadorDeMovimentos1]][movimentacaoExterna1[1][contadorDeMovimentos1]].equals("4")){
		//caso a peça 1 caia em cima da peça 4
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[11 + i][11 + j].equals("+")){
					tabuleiro[11 + i][11 + j] = "4";
					break;
				}
			}
		}
		
		tabuleiro[movimentacaoExterna1[0][contadorDeMovimentos1]][movimentacaoExterna1[1][contadorDeMovimentos1]] = "1";
		
	}
	
	if(tabuleiro[movimentacaoExterna2[0][contadorDeMovimentos2]][movimentacaoExterna2[1][contadorDeMovimentos2]].equals("1")){
		//caso a peça 2 caia em cima da peça 1
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[2 + i][2 + j].equals("+")){
					tabuleiro[2 + i][2 + j] = "1";
					break;
				}
			}
		}
		
		tabuleiro[movimentacaoExterna2[0][contadorDeMovimentos2]][movimentacaoExterna2[1][contadorDeMovimentos2]] = "2";
		
	} else if(tabuleiro[movimentacaoExterna2[0][contadorDeMovimentos2]][movimentacaoExterna2[1][contadorDeMovimentos2]].equals("3")){
		//caso a peça 2 caia em cima da peça 3
			
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[11 + i][11 + j].equals("+")){
					tabuleiro[11 + i][11 + j] = "3";
					break;
				}
			}
		}
	
		tabuleiro[movimentacaoExterna2[0][contadorDeMovimentos2]][movimentacaoExterna2[1][contadorDeMovimentos2]] = "2";
		
	} else if(tabuleiro[movimentacaoExterna2[0][contadorDeMovimentos2]][movimentacaoExterna2[1][contadorDeMovimentos2]].equals("4")){
		//caso a peça 2 caia em cima da peça 4
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[11 + i][11 + j].equals("+")){
					tabuleiro[11 + i][11 + j] = "4";
					break;
				}
			}
		}
		
		tabuleiro[movimentacaoExterna2[0][contadorDeMovimentos2]][movimentacaoExterna2[1][contadorDeMovimentos2]] = "2";
		
	}
	
	if(tabuleiro[movimentacaoExterna3[0][contadorDeMovimentos3]][movimentacaoExterna3[1][contadorDeMovimentos3]].equals("1")){
		//caso a peça 3 caia em cima da peça 1
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[2 + i][2 + j].equals("+")){
					tabuleiro[2 + i][2 + j] = "1";
					break;
				}
			}
		}
			
		tabuleiro[movimentacaoExterna3[0][contadorDeMovimentos3]][movimentacaoExterna3[1][contadorDeMovimentos3]] = "3";
		
	} else if(tabuleiro[movimentacaoExterna3[0][contadorDeMovimentos3]][movimentacaoExterna3[1][contadorDeMovimentos3]].equals("2")){
		//caso a peça 3 caia em cima da peça 2
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[2 + i][11 + j].equals("+")){
					tabuleiro[2 + i][11 + j] = "2";
					break;
				}
			}
		}
		
		tabuleiro[movimentacaoExterna3[0][contadorDeMovimentos3]][movimentacaoExterna3[1][contadorDeMovimentos3]] = "3";
		
	} else if(tabuleiro[movimentacaoExterna3[0][contadorDeMovimentos3]][movimentacaoExterna3[1][contadorDeMovimentos3]].equals("4")){
		//caso a peça 3 caia em cima da peça 4
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[11 + i][11 + j].equals("+")){
					tabuleiro[11 + i][11 + j] = "4";
					break;
				}
			}
		}
		
		tabuleiro[movimentacaoExterna3[0][contadorDeMovimentos3]][movimentacaoExterna3[1][contadorDeMovimentos3]] = "3";
	}
	
	if(tabuleiro[movimentacaoExterna4[0][contadorDeMovimentos4]][movimentacaoExterna4[1][contadorDeMovimentos4]].equals("1")){
		//caso a peça 4 caia em cima da peça 1
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[2 + i][2 + j].equals("+")){
					tabuleiro[2 + i][2 + j] = "1";
					break;
				}
			}
		}
		
		tabuleiro[movimentacaoExterna4[0][contadorDeMovimentos4]][movimentacaoExterna4[1][contadorDeMovimentos4]] = "4";
				
	} else if(tabuleiro[movimentacaoExterna4[0][contadorDeMovimentos4]][movimentacaoExterna4[1][contadorDeMovimentos4]].equals("2")){
		//caso a peça 4 caia em cima da peça 2
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[2 + i][11 + j].equals("+")){
					tabuleiro[2 + i][11 + j] = "2";
					break;
				}
			}
		}
			
		tabuleiro[movimentacaoExterna4[0][contadorDeMovimentos4]][movimentacaoExterna4[1][contadorDeMovimentos4]] = "4";
		
	} else if(tabuleiro[movimentacaoExterna4[0][contadorDeMovimentos4]][movimentacaoExterna4[1][contadorDeMovimentos4]].equals("3")){
		//caso a peça 4 caia em cima da peça 3
		
		for(i = 0; i < 2; i++){
			for(j = 0; j < 2; j++){
				if(tabuleiro[11 + i][11 + j].equals("+")){
					tabuleiro[11 + i][11 + j] = "4";
					break;
				}
			}
		}		
		
		tabuleiro[movimentacaoExterna4[0][contadorDeMovimentos4]][movimentacaoExterna4[1][contadorDeMovimentos4]] = "4";
			 	
	}
	}
}
